#汉字字频统计可以套用英文单词词频统计的程序，只需要做小修改。但是如果文本中有英文，其中的英文会被分为一个个字母，所以只能用于统计纯汉语文本，不能用于英文单词词频统计
print("请输入要统计词频的中文文本(输入完成时请双击回车键“Enter”):")
stop = ""#设定终止符号为空白行
text = ""#此处必须提前定义好用于存放用户输入文字的字符串text
for x in iter(input,stop):#遍历用户输入的input中的每个字并将其添加至text字符串中，直到遇到终止命令stop，避免换行时输入的“\n”导致的输入终止，使程序可以接收多行文字信息。
    text += x +"\n"  #不知道原因，换行符会被忽略，导致一行末尾的单词会和下一行行首的单词相连。猜测+"\n"的作用为使文本中的换行符不被忽略？
print (text)
def stats_text_en(x) :#定义文字处理函数
   for y in '!"#$&()*+,-./:;<=>?@[\\]^_{|}·~‘’，。':#去除标点符号（相对于英文处理的程序添加了中文符号）
     x = x .replace(y,"")
   x = x . replace("\n"," ")#去除换行符
   x = x . replace(""," ")#由于汉字输入字和字之间无间隔会导致所有汉字文本共同算作列表中的一个元素，所以人为添加空格将汉字分隔开以便于统计。其余的套用英文文本处理的程序
   copy = x.split(' ')#将文本转换为列表
   copy = [i for i in copy if i != ""]#去除之前人为添加的空格，避免影响统计结果
   a = {}#创建新字典
   for i in copy :#对copy中汉字进行字频统计，此前已有的key的value值加一，此前未有的key的value为1
     if i in a:
       a[i] = a[i]+1
     else:
       a[i] = 1
   b = sorted(a.items(),key=lambda x:x[1],reverse = True)#对字典a按照值反向排序并将排序结果形成一个列表
   print(b)
stats_text_en(text)#将用户输入的text作为参数代入已定义好的函数中使用